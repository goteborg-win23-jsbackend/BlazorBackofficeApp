@page "/"
@using BlazorBackofficeApp.Contexts
@using BlazorBackofficeApp.Data
@using BlazorBackofficeApp.Models
@using BlazorBackofficeApp.Services
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject ApplicationDbContext DbContext
@inject UserService UserService
@inject RoleManager<IdentityRole> RoleManager
@rendermode InteractiveServer 

@code {
    string resultDelete = "";
    List<ApplicationUser> userList;

    protected override async Task OnInitializedAsync()
    {
        var user = await DbContext.Users.ToListAsync();

        await LoadUsers();
        user = userList;
    }

    private async Task DeleteUser(string userId)
    {
        var result = await UserService.DeleteUser(userId);
        if (result)
        {
            resultDelete = "User was deleted succesfully";
            userList = await DbContext.Users.ToListAsync();
        }
        else
        {
            resultDelete = "Error deleting user.";
        }


    }
    private async Task LoadUsers()
    {
        userList = await DbContext.Users.ToListAsync();
    }
}
<PageTitle>Users</PageTitle>





<AuthorizeView>
    <Authorized>
        @if (userList != null && userList.Any())
        {
            <h1>Web Application Blazor: User Service</h1>

            <p>Users:</p>
            <div class="user-container">
                @foreach (var user in userList)
                {
                    <div class="user-card">
                        
                        <div><strong>@user.FirstName @user.LastName</strong></div>
                        <div>Email: @user.Email</div>
                        <button class="btn btn-danger" @onclick="() => DeleteUser(user.Id)">Remove</button>
                        <button class="btn btn-success">Update</button>
                        <p>@resultDelete</p>
                    </div>
                }
            </div>
            <div>
               <h5>Create Admin user</h5>
                <button class="btn btn-lg btn-primary">Create</button>
            </div>
        }
        else
        {
            <div>Hittade inga användare</div>
        }

        <div>

        </div>
       
                <AntiforgeryToken />
               
    </Authorized>
    <NotAuthorized>
        <h1>Welcome Admin</h1>

        <p>Login to access your services</p>
    </NotAuthorized>
</AuthorizeView>




<style>
    .user-container {
        display: flex;
        flex-wrap: wrap;
        justify-content: space-between;
    }

    .user-card {
        background-color: #f8f9fa;
        border: 1px solid #ced4da;
        border-radius: 5px;
        padding: 10px;
        margin-bottom: 10px;
        width: calc(33.3333% - 20px); 
        box-sizing: border-box;
    }

    
    
</style>